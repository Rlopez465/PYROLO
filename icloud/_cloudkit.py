# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: icloud/_cloudkit.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class RequestOperationHeaderContainerEnvironment(betterproto.Enum):
    PRODUCTION = 1
    SANDBOX = 2


class RequestOperationHeaderDatabase(betterproto.Enum):
    PRIVATE_DB = 1
    PUBLIC_DB = 2
    SHARED_DB = 3


class RequestOperationHeaderIsolationLevel(betterproto.Enum):
    ZONE = 1
    OPERATION = 2


class ResponseOperationResultCode(betterproto.Enum):
    SUCCESS = 1
    PARTIAL = 2
    FAILURE = 3
    INDETERMINATE = 4


class ResponseOperationResultErrorClientCode(betterproto.Enum):
    UNKNOWN = 1
    EXPIRED_APP_CONFIG = 2
    EXPIRED_GLOBAL_CONFIG = 3
    BAD_SYNTAX = 4
    FORBIDDEN = 5
    THROTTLED = 6
    REFUSED = 7
    NOT_SUPPORTED = 8
    EXISTS = 9
    REQUEST_ALREADY_PROCESSED = 10
    BAD_AUTH_TOKEN = 11
    NEEDS_AUTHENTICATION = 12
    MESCAL_SIGNATURE_MISSING = 13
    INVALID_MESCAL_SIGNATURE = 14
    OP_LOCK_FAILURE = 15
    ATOMIC_FAILURE = 16
    RESET_NEEDED = 17
    FIELDS_PER_TYPE_LIMIT_EXCEEDED = 18
    TYPE_BUSY = 19
    NUM_RECORD_TYPES_LIMIT_EXCEEDED = 20
    INVALID_CONTAINER = 21
    INVALID_RECORD_TYPE_NAME = 22
    INVALID_FIELD_NAME = 23
    INVALID_FIELD_VALUE = 24
    INVALID_IDENTIFIER = 25
    FIELD_NOT_QUERYABLE = 26
    FIELD_NOT_SORTABLE = 27
    QUERY_FILTER_LIMIT_EXCEEDED = 28
    QUERY_FILTER_VALUES_LIMIT_EXCEEDED = 29
    MEMBERSHIP_QUERY_LIMIT_EXCEEDED = 30
    NOTIFICATION_ADDITIONAL_FIELD_LIMIT_EXCEEDED = 31
    NOTIFICATION_ADDITIONAL_FIELD_INVALID_TYPE = 32
    SUBSCRIPTION_LIMIT_EXCEEDED = 33
    UNIQUE_TRIGGER_LIMIT_EXCEEDED = 34
    TRIGGER_SUBSCRIPTION_BINDING_TYPE_MISMATCH = 35
    ZONE_SIZE_LIMIT_EXCEEDED = 36
    ZONE_COUNT_LIMIT_EXCEEDED = 37
    UNIQUE_FIELD_FAILURE = 38
    VALIDATING_REFERENCE_ERROR = 39
    FULL_RESET_NEEDED = 40
    ALREADY_SHARED = 41
    EMAIL_OUT_OF_NETWORK = 42
    DUPLICATE_SUBSCRIPTION = 43
    EXPIRED_PUT_RECEIPT = 46
    QUOTA_EXCEEDED = 47
    ZONE_NOT_FOUND = 48
    INVALID_BUNDLE_ID = 49
    UNSUPPORTED_DEVICE = 50
    BLACK_LISTED = 51
    RECORD_PROTECTION_INFO_TAG_MISMATCH = 52
    ZONE_PROTECTION_INFO_TAG_MISMATCH = 53
    ASSET_SIZE_LIMIT_EXCEEDED = 54
    BATCH_OPERATION_LIMIT_EXCEEDED = 55
    REQUEST_SIZE_LIMIT_EXCEEDED = 56
    RECORD_SIZE_LIMIT_EXCEEDED = 57
    DATABASE_COMMIT_SIZE_EXCEEDED = 58
    USER_DELETED_DATA_FOR_ZONE = 59
    STALE_RECORD_UPDATE = 60
    SHARE_PARTICIPANT_LIMIT_EXCEEDED = 61
    SHARE_PARTICIPANT_ERROR = 62


class ResponseOperationResultErrorServerCode(betterproto.Enum):
    UNKNOWN = 1
    OVERLOADED = 2
    NOT_FOUND = 3
    CONTAINER_UNAVAILABLE = 4
    MESCAL_SIGNATURE_PARSE_ERROR = 6
    ZONE_BUSY = 7
    ZONE_UNAVAILABLE = 8


class OperationType(betterproto.Enum):
    NONE_TYPE = 0
    ZONE_SAVE_TYPE = 200
    ZONE_RETRIEVE_TYPE = 201
    ZONE_DELETE_TYPE = 202
    ZONE_RETRIEVE_CHANGES_TYPE = 203
    RECORD_SAVE_TYPE = 210
    RECORD_RETRIEVE_TYPE = 211
    RECORD_RETRIEVE_VERSIONS_TYPE = 212
    RECORD_RETRIEVE_CHANGES_TYPE = 213
    RECORD_DELETE_TYPE = 214
    QUERY_RETRIEVE_TYPE = 220
    ASSET_UPLOAD_TOKEN_RETRIEVE_TYPE = 230
    CONTAINER_DELETE_TYPE = 240
    CONTAINER_RESET_TYPE = 241
    CONTAINER_SCHEMA_PROMOTION_TYPE = 242
    USER_AVAILABLE_QUOTA_TYPE = 243
    WEB_AUTH_TOKEN_RETRIEVE_TYPE = 250
    SUBSCRIPTION_CREATE_TYPE = 300
    SUBSCRIPTION_RETRIEVE_TYPE = 301
    SUBSCRIPTION_DELETE_TYPE = 302
    USER_RETRIEVE_TYPE = 400
    USER_QUERYTYPE = 401
    USER_PRIVACY_SETTINGS_RETRIEVE_TYPE = 402
    USER_PRIVACY_SETTINGS_UPDATE_TYPE = 403
    USER_PRIVACY_SETTINGS_RESET_TYPE = 404
    USER_PRIVACY_SETTINGS_BATCH_LOOKUP = 405
    SHARE_SAVE_TYPE = 500
    SHARE_RETRIEVE_TYPE = 501
    SHARE_DELETE_TYPE = 502
    SHARE_ACCEPT_TYPE = 503
    SHARE_TOKEN_SAVE_TYPE = 510
    SHARE_TOKEN_RETRIEVE_TYPE = 511
    SHARE_TOKEN_DELETE_TYPE = 512
    POST_COMMENT_TYPE = 600
    GET_COMMENTS_TYPE = 601
    GET_COMMENT_TYPE = 613
    DELETE_COMMENT_TYPE = 602
    LIKE_TYPE = 610
    UNLIKE_TYPE = 611
    GET_LIKES_TYPE = 612
    PULSE_TYPE = 700
    PUSH_REGISTER_TYPE = 800
    PUSH_UNREGISTER_TYPE = 801
    PUSH_BADGE_TYPE = 802
    PUSH_SYNC_TYPE = 803
    PUSH_READ_TYPE = 804
    MESCAL_SIGNATURE_TYPE = 1000
    MESCAL_SESSION_INFO_TYPE = 1001
    MESCAL_CERTIFICATE_TYPE = 1002


class RecordRetrieveRequestRetrieveAssetURLType(betterproto.Enum):
    PUBLISHED_URL = 1
    STREAMING_URL = 2


class QueryRetrieveResponseQueryResultType(betterproto.Enum):
    ID_AND_ETAG = 1
    FULL_RECORD = 2


class QueryQueryOperator(betterproto.Enum):
    AND = 1
    OR = 2


class QueryFilterType(betterproto.Enum):
    EQUALS = 1
    NOT_EQUALS = 2
    IN = 3
    NOT_IN = 4
    LESS_THAN = 5
    LESS_THAN_OR_EQUALS = 6
    GREATER_THAN = 7
    GREATER_THAN_OR_EQUALS = 8
    NEAR = 9
    CONTAINS_ALL_TOKENS = 10
    CONTAINS_ANY_TOKENS = 11
    LIST_CONTAINS = 12
    LIST_NOT_CONTAINS = 13
    LIST_CONTAINS_ANY = 14
    LIST_NOT_CONTAINS_ANY = 15
    BEGINS_WITH = 16
    NOT_BEGINS_WITH = 17
    LIST_MEMBER_BEGINS_WITH = 18
    NOT_LIST_MEMBER_BEGINS_WITH = 19
    LIST_CONTAINS_ALL = 20
    LIST_NOT_CONTAINS_ALL = 21
    UNKNOWN = 22


class QuerySortOrder(betterproto.Enum):
    ASCENDING = 1
    DESCENDING = 2
    UNKNOWN = 3


class RecordFieldValueType(betterproto.Enum):
    BYTES_TYPE = 1
    DATE_TYPE = 2
    STRING_TYPE = 3
    LOCATION_TYPE = 4
    REFERENCE_TYPE = 5
    ASSET_TYPE = 6
    INT64_TYPE = 7
    DOUBLE_TYPE = 8
    EMPTY_LIST = 9
    DATE_LIST_TYPE = 10
    BYTES_LIST_TYPE = 11
    LOCATION_LIST_TYPE = 12
    REFERENCE_LIST_TYPE = 13
    ASSET_LIST_TYPE = 14
    STRING_LIST_TYPE = 15
    LIST_TYPE = 16
    INT64_LIST_TYPE = 17
    DOUBLE_LIST_TYPE = 18
    PACKAGE_TYPE = 19
    ENCRYPTED_BYTES_TYPE = 20
    ENCRYPTED_BYTES_LIST_TYPE = 21
    UNKNOWN = 22


class RecordReferenceType(betterproto.Enum):
    OWNING = 1
    WEAK = 2
    VALIDATING = 3


class IdentifierType(betterproto.Enum):
    RECORD = 1
    DEVICE = 2
    SUBSCRIPTION = 3
    SHARE = 4
    COMMENT = 5
    RECORD_ZONE = 6
    USER = 7


@dataclass
class NamedHeader(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class PutComplete(betterproto.Message):
    receipt: List["PutCompleteReceipt"] = betterproto.message_field(1)
    validate: bytes = betterproto.bytes_field(2)


@dataclass
class PutCompleteReceipt(betterproto.Message):
    url: str = betterproto.string_field(1)
    status: int = betterproto.uint32_field(2)
    headers: List["NamedHeader"] = betterproto.message_field(4)
    unk1: str = betterproto.string_field(7)
    stats1: List["NamedHeader"] = betterproto.message_field(8)
    stats2: List["NamedHeader"] = betterproto.message_field(9)
    verify: str = betterproto.string_field(10)
    unk2: int = betterproto.uint32_field(13)


@dataclass
class RequestOperation(betterproto.Message):
    """
    Based on https://gist.github.com/horrorho/9c0ff20055b854f4298750cfad635fe2
    and https://github.com/horrorho/InflatableDonkey/blob/master/src/main/resou
    rces/cloud_kit.proto
    """

    header: "RequestOperationHeader" = betterproto.message_field(1)
    request: "Operation" = betterproto.message_field(2)
    zone_retrieve_request: "ZoneRetrieveRequest" = betterproto.message_field(201)
    record_save_request: "RecordSaveRequest" = betterproto.message_field(210)
    record_retrieve_request: "RecordRetrieveRequest" = betterproto.message_field(211)
    query_retrieve_request: "QueryRetrieveRequest" = betterproto.message_field(220)
    asset_upload_token_retrieve_request: "AssetUploadTokenRetrieveRequest" = (
        betterproto.message_field(230)
    )


@dataclass
class RequestOperationHeader(betterproto.Message):
    user_token: str = betterproto.string_field(1)
    application_container: str = betterproto.string_field(2)
    application_bundle: str = betterproto.string_field(3)
    application_version: str = betterproto.string_field(4)
    application_config_version: int = betterproto.uint64_field(5)
    global_config_version: int = betterproto.uint64_field(6)
    device_identifier: "Identifier" = betterproto.message_field(7)
    device_software_version: str = betterproto.string_field(8)
    device_hardware_version: str = betterproto.string_field(9)
    device_library_name: str = betterproto.string_field(10)
    device_library_version: str = betterproto.string_field(11)
    device_flow_control_key: str = betterproto.string_field(12)
    device_flow_control_budget: int = betterproto.uint64_field(13)
    device_flow_control_budget_cap: int = betterproto.uint64_field(14)
    device_flow_control_regeneration: float = betterproto.float_field(15)
    device_protocol_version: int = betterproto.uint64_field(16)
    locale: "Locale" = betterproto.message_field(17)
    mmcs_protocol_version: str = betterproto.string_field(18)
    application_container_environment: "RequestOperationHeaderContainerEnvironment" = (
        betterproto.enum_field(19)
    )
    client_change_token: bytes = betterproto.bytes_field(20)
    device_assigned_name: str = betterproto.string_field(21)
    device_hardware_i_d: str = betterproto.string_field(22)
    target_database: "RequestOperationHeaderDatabase" = betterproto.enum_field(23)
    user_i_d_container_i_d: str = betterproto.string_field(24)
    isolation_level: "RequestOperationHeaderIsolationLevel" = betterproto.enum_field(25)
    unk1: int = betterproto.int32_field(29)
    unk2: str = betterproto.string_field(32)
    device_serial: str = betterproto.string_field(33)
    unk3: int = betterproto.int32_field(34)
    unk4: int = betterproto.int32_field(35)


@dataclass
class AssetUploadTokenRetrieveRequest(betterproto.Message):
    asset_upload: "AssetUploadTokenRetrieveRequestAssetUpload" = (
        betterproto.message_field(4)
    )
    header: List["NamedHeader"] = betterproto.message_field(5)
    authorize_put: "AssetUploadTokenRetrieveRequestAuthorizePut" = (
        betterproto.message_field(6)
    )
    unk1: int = betterproto.int32_field(8)


@dataclass
class AssetUploadTokenRetrieveRequestAssetUpload(betterproto.Message):
    record: "RecordIdentifier" = betterproto.message_field(1)
    record_type: "RecordType" = betterproto.message_field(2)
    asset: "AssetUploadTokenRetrieveRequestAssetUploadAsset" = (
        betterproto.message_field(3)
    )


@dataclass
class AssetUploadTokenRetrieveRequestAssetUploadName(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass
class AssetUploadTokenRetrieveRequestAssetUploadAsset(betterproto.Message):
    name: "AssetUploadTokenRetrieveRequestAssetUploadName" = betterproto.message_field(
        1
    )
    data: "AssetUploadTokenRetrieveRequestAssetUploadAssetAssetData" = (
        betterproto.message_field(2)
    )


@dataclass
class AssetUploadTokenRetrieveRequestAssetUploadAssetAssetData(betterproto.Message):
    sig: bytes = betterproto.bytes_field(2)
    size: int = betterproto.uint32_field(4)
    associated_record: "RecordIdentifier" = betterproto.message_field(10)


@dataclass
class AssetUploadTokenRetrieveRequestAuthorizePut(betterproto.Message):
    """From https://github.com/TaeHagen/rustpush/blob/master/src/mmcs.proto"""

    data: "AssetUploadTokenRetrieveRequestAuthorizePutPutData" = (
        betterproto.message_field(1)
    )
    f3: int = betterproto.uint32_field(3)


@dataclass
class AssetUploadTokenRetrieveRequestAuthorizePutPutData(betterproto.Message):
    sig: bytes = betterproto.bytes_field(1)
    token: str = betterproto.string_field(2)
    chunks: List[
        "AssetUploadTokenRetrieveRequestAuthorizePutPutDataChunkInfo"
    ] = betterproto.message_field(3)
    footer: "AssetUploadTokenRetrieveRequestAuthorizePutPutDataFooter" = (
        betterproto.message_field(8)
    )


@dataclass
class AssetUploadTokenRetrieveRequestAuthorizePutPutDataChunkInfo(betterproto.Message):
    chunk_checksum: bytes = betterproto.bytes_field(1)
    chunk_encryption_key: bytes = betterproto.bytes_field(2)
    chunk_length: int = betterproto.uint32_field(3)


@dataclass
class AssetUploadTokenRetrieveRequestAuthorizePutPutDataFooter(betterproto.Message):
    chunk_count: int = betterproto.uint32_field(1)
    profile_type: str = betterproto.string_field(101)
    unk_date: str = betterproto.string_field(102)
    f103: int = betterproto.uint32_field(103)
    extension: str = betterproto.string_field(104)


@dataclass
class RecordSaveRequest(betterproto.Message):
    record: "Record" = betterproto.message_field(1)
    unk1: int = betterproto.int32_field(2)
    unk2: int = betterproto.int32_field(6)


@dataclass
class ResponseOperation(betterproto.Message):
    operation_cost: int = betterproto.uint32_field(1)
    response: "Operation" = betterproto.message_field(2)
    result: "ResponseOperationResult" = betterproto.message_field(3)
    zone_retrieve_response: "ZoneRetrieveResponse" = betterproto.message_field(201)
    record_retrieve_response: "RecordRetrieveResponse" = betterproto.message_field(211)
    query_retrieve_response: "QueryRetrieveResponse" = betterproto.message_field(220)
    asset_upload_token_retrieve_response: "AssetUploadTokenRetrieveResponse" = (
        betterproto.message_field(230)
    )


@dataclass
class ResponseOperationResult(betterproto.Message):
    code: "ResponseOperationResultCode" = betterproto.enum_field(1)
    error: "ResponseOperationResultError" = betterproto.message_field(2)


@dataclass
class ResponseOperationResultError(betterproto.Message):
    client_error: "ResponseOperationResultErrorClient" = betterproto.message_field(1)
    server_error: "ResponseOperationResultErrorServer" = betterproto.message_field(2)
    extension_error: "ResponseOperationResultErrorExtension" = (
        betterproto.message_field(7)
    )
    retry_after_seconds: int = betterproto.int32_field(3)
    error_description: str = betterproto.string_field(4)
    error_key: str = betterproto.string_field(5)
    error_internal: str = betterproto.string_field(6)


@dataclass
class ResponseOperationResultErrorClient(betterproto.Message):
    type: "ResponseOperationResultErrorClientCode" = betterproto.enum_field(1)


@dataclass
class ResponseOperationResultErrorServer(betterproto.Message):
    type: "ResponseOperationResultErrorServerCode" = betterproto.enum_field(1)


@dataclass
class ResponseOperationResultErrorExtension(betterproto.Message):
    extension_name: str = betterproto.string_field(1)
    type_code: int = betterproto.uint32_field(2)
    extension_payload: bytes = betterproto.bytes_field(3)


@dataclass
class AssetUploadTokenRetrieveResponse(betterproto.Message):
    asset_info: "AssetUploadTokenRetrieveResponseAssetInfo" = betterproto.message_field(
        2
    )
    upload_info: "AssetUploadTokenRetrieveResponseUploadInfo" = (
        betterproto.message_field(3)
    )


@dataclass
class AssetUploadTokenRetrieveResponseAssetInfo(betterproto.Message):
    encoded_inner_proto: str = betterproto.string_field(1)


@dataclass
class AssetUploadTokenRetrieveResponseAssetInfoAssetInfoInner(betterproto.Message):
    container: str = betterproto.string_field(1)


@dataclass
class AssetUploadTokenRetrieveResponseUploadInfo(betterproto.Message):
    buckets: List[
        "AssetUploadTokenRetrieveResponseUploadInfoBucket"
    ] = betterproto.message_field(1)
    validate: bytes = betterproto.bytes_field(6)


@dataclass
class AssetUploadTokenRetrieveResponseUploadInfoBucket(betterproto.Message):
    bucket_name: str = betterproto.string_field(1)
    url: "AssetUploadTokenRetrieveResponseUploadInfoBucketURL" = (
        betterproto.message_field(2)
    )
    unk1: str = betterproto.string_field(4)
    chunks: List[
        "AssetUploadTokenRetrieveResponseUploadInfoBucketChunkHash"
    ] = betterproto.message_field(5)


@dataclass
class AssetUploadTokenRetrieveResponseUploadInfoBucketURL(betterproto.Message):
    domain: str = betterproto.string_field(1)
    port: int = betterproto.uint32_field(2)
    method: str = betterproto.string_field(3)
    path: str = betterproto.string_field(4)
    protocol: str = betterproto.string_field(5)
    version: str = betterproto.string_field(6)
    protocol2: str = betterproto.string_field(7)
    headers: List["NamedHeader"] = betterproto.message_field(8)


@dataclass
class AssetUploadTokenRetrieveResponseUploadInfoBucketChunkHash(betterproto.Message):
    hash: bytes = betterproto.bytes_field(1)


@dataclass
class Operation(betterproto.Message):
    operation_u_u_i_d: str = betterproto.string_field(1)
    type: "OperationType" = betterproto.enum_field(2)
    synchronous_mode: bool = betterproto.bool_field(3)
    last: bool = betterproto.bool_field(4)


@dataclass
class ZoneRetrieveRequest(betterproto.Message):
    """/api/client/zone/retrieve"""

    zone_identifier: "RecordZoneIdentifier" = betterproto.message_field(1)


@dataclass
class ZoneRetrieveResponse(betterproto.Message):
    zone_summary: List["ZoneRetrieveResponseZoneSummary"] = betterproto.message_field(1)


@dataclass
class ZoneRetrieveResponseZoneSummary(betterproto.Message):
    target_zone: "Zone" = betterproto.message_field(1)
    current_server_continuation_token: bytes = betterproto.bytes_field(2)
    client_change_token: bytes = betterproto.bytes_field(3)
    device_count: int = betterproto.int32_field(4)
    asset_quota_usage: int = betterproto.int64_field(5)
    metadata_quota_usage: int = betterproto.int64_field(6)


@dataclass
class RecordRetrieveRequest(betterproto.Message):
    """/api/client/record/retrieve"""

    record_identifier: "RecordIdentifier" = betterproto.message_field(1)
    requested_fields: "RequestedFields" = betterproto.message_field(2)
    version_e_tag: str = betterproto.string_field(3)
    client_version_e_tag: str = betterproto.string_field(4)
    get_asset_u_r_l: "RecordRetrieveRequestRetrieveAssetURL" = (
        betterproto.message_field(5)
    )
    assets_to_download: "AssetsToDownload" = betterproto.message_field(6)


@dataclass
class RecordRetrieveRequestRetrieveAssetURL(betterproto.Message):
    asset_fields: "RequestedFields" = betterproto.message_field(1)
    requested_t_t_l: int = betterproto.int64_field(2)
    type: "RecordRetrieveRequestRetrieveAssetURLType" = betterproto.enum_field(3)


@dataclass
class RecordRetrieveResponse(betterproto.Message):
    record: "Record" = betterproto.message_field(1)
    client_version_e_tag_match: bool = betterproto.bool_field(2)


@dataclass
class QueryRetrieveRequest(betterproto.Message):
    """/api/client/query/retrieve"""

    query: "Query" = betterproto.message_field(1)
    continuation_marker: bytes = betterproto.bytes_field(2)
    limit: int = betterproto.uint32_field(3)
    zone_identifier: "RecordZoneIdentifier" = betterproto.message_field(4)
    requested_fields: "RequestedFields" = betterproto.message_field(5)
    assets_to_download: "AssetsToDownload" = betterproto.message_field(6)


@dataclass
class QueryRetrieveResponse(betterproto.Message):
    query_results: List["QueryRetrieveResponseQueryResult"] = betterproto.message_field(
        1
    )
    continuation_marker: bytes = betterproto.bytes_field(2)


@dataclass
class QueryRetrieveResponseQueryResult(betterproto.Message):
    identifier: "RecordIdentifier" = betterproto.message_field(1)
    etag: str = betterproto.string_field(2)
    type: "QueryRetrieveResponseQueryResultType" = betterproto.enum_field(3)
    record: "Record" = betterproto.message_field(4)


@dataclass
class Query(betterproto.Message):
    types: List["RecordType"] = betterproto.message_field(1)
    filters: List["QueryFilter"] = betterproto.message_field(2)
    sorts: List["QuerySort"] = betterproto.message_field(3)
    distinct: bool = betterproto.bool_field(4)
    query_operator: "QueryQueryOperator" = betterproto.enum_field(5)


@dataclass
class QueryFilter(betterproto.Message):
    field_name: "RecordFieldIdentifier" = betterproto.message_field(1)
    field_value: "RecordFieldValue" = betterproto.message_field(2)
    bounds: "LocationBound" = betterproto.message_field(3)
    type: "QueryFilterType" = betterproto.enum_field(4)


@dataclass
class QuerySort(betterproto.Message):
    field_name: "RecordFieldIdentifier" = betterproto.message_field(1)
    order: "QuerySortOrder" = betterproto.enum_field(2)
    coordinate: "LocationCoordinate" = betterproto.message_field(3)


@dataclass
class Date(betterproto.Message):
    time: float = betterproto.double_field(1)


@dataclass
class Asset(betterproto.Message):
    owner: str = betterproto.string_field(1)
    signature: bytes = betterproto.bytes_field(2)
    header: bytes = betterproto.bytes_field(3)
    size: int = betterproto.uint64_field(4)
    download_token: str = betterproto.string_field(5)
    download_request: bytes = betterproto.bytes_field(6)
    derived_content_type: str = betterproto.string_field(7)
    content_base_u_r_l: str = betterproto.string_field(8)
    requestor: str = betterproto.string_field(9)
    record_i_d: "RecordIdentifier" = betterproto.message_field(10)
    upload_receipt: str = betterproto.string_field(11)
    data: bytes = betterproto.bytes_field(12)
    download_base_u_r_l: str = betterproto.string_field(13)
    download_u_r_l_expiration: int = betterproto.uint64_field(14)
    protection_info: "ProtectionInfo" = betterproto.message_field(15)
    reference_signature: bytes = betterproto.bytes_field(17)
    download_token_expiration: int = betterproto.uint64_field(18)


@dataclass
class DateStatistics(betterproto.Message):
    creation: "Date" = betterproto.message_field(1)
    modification: "Date" = betterproto.message_field(2)


@dataclass
class Location(betterproto.Message):
    coordinate: "LocationCoordinate" = betterproto.message_field(1)
    bounds: "LocationBound" = betterproto.message_field(2)


@dataclass
class LocationBound(betterproto.Message):
    radius: float = betterproto.double_field(1)


@dataclass
class LocationCoordinate(betterproto.Message):
    lattitude: float = betterproto.double_field(1)
    longitude: float = betterproto.double_field(2)
    horizontal_accuracy: float = betterproto.double_field(3)
    altitude: float = betterproto.double_field(4)
    vertical_accuracy: float = betterproto.double_field(5)
    course: float = betterproto.double_field(6)
    speed: float = betterproto.double_field(7)
    timestamp: "Date" = betterproto.message_field(8)


@dataclass
class Package(betterproto.Message):
    manifest: "Asset" = betterproto.message_field(1)
    sections: List["Asset"] = betterproto.message_field(2)


@dataclass
class Record(betterproto.Message):
    etag: str = betterproto.string_field(1)
    record_identifier: "RecordIdentifier" = betterproto.message_field(2)
    type: "RecordType" = betterproto.message_field(3)
    created_by: "Identifier" = betterproto.message_field(4)
    time_statistics: "DateStatistics" = betterproto.message_field(5)
    record_field: List["RecordField"] = betterproto.message_field(7)
    share_id: "ShareIdentifier" = betterproto.message_field(8)
    modified_by: "Identifier" = betterproto.message_field(9)
    conflict_loser_etag: List[str] = betterproto.string_field(10)
    modified_by_device: str = betterproto.string_field(11)
    plugin_fields: List["RecordField"] = betterproto.message_field(12)
    protection_info: "ProtectionInfo" = betterproto.message_field(13)
    permission: int = betterproto.uint32_field(15)


@dataclass
class RecordField(betterproto.Message):
    identifier: "RecordFieldIdentifier" = betterproto.message_field(1)
    value: "RecordFieldValue" = betterproto.message_field(2)


@dataclass
class RecordFieldIdentifier(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass
class RecordFieldValue(betterproto.Message):
    type: "RecordFieldValueType" = betterproto.enum_field(1)
    bytes_value: bytes = betterproto.bytes_field(2)
    signed_value: int = betterproto.int64_field(4)
    double_value: float = betterproto.double_field(5)
    date_value: "Date" = betterproto.message_field(6)
    string_value: str = betterproto.string_field(7)
    location_value: "LocationCoordinate" = betterproto.message_field(8)
    reference_value: "RecordReference" = betterproto.message_field(9)
    asset_value: "Asset" = betterproto.message_field(10)
    list_values: List["RecordFieldValue"] = betterproto.message_field(11)
    package_value: "Package" = betterproto.message_field(12)


@dataclass
class RecordReference(betterproto.Message):
    type: "RecordReferenceType" = betterproto.enum_field(1)
    record_identifier: "RecordIdentifier" = betterproto.message_field(2)


@dataclass
class RecordType(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass
class RequestedFields(betterproto.Message):
    fields: List["RecordFieldIdentifier"] = betterproto.message_field(1)


@dataclass
class AssetsToDownload(betterproto.Message):
    all_assets: bool = betterproto.bool_field(1)
    asset_fields: "RequestedFields" = betterproto.message_field(2)


@dataclass
class Locale(betterproto.Message):
    language_code: str = betterproto.string_field(1)
    region_code: str = betterproto.string_field(2)
    enabled_keyboards: List[str] = betterproto.string_field(3)
    active_keyboard: str = betterproto.string_field(4)


@dataclass
class ShareIdentifier(betterproto.Message):
    value: "Identifier" = betterproto.message_field(1)
    zone_identifier: "RecordZoneIdentifier" = betterproto.message_field(2)


@dataclass
class RecordIdentifier(betterproto.Message):
    value: "Identifier" = betterproto.message_field(1)
    zone_identifier: "RecordZoneIdentifier" = betterproto.message_field(2)


@dataclass
class RecordZoneIdentifier(betterproto.Message):
    value: "Identifier" = betterproto.message_field(1)
    owner_identifier: "Identifier" = betterproto.message_field(2)


@dataclass
class Identifier(betterproto.Message):
    name: str = betterproto.string_field(1)
    type: "IdentifierType" = betterproto.enum_field(2)


@dataclass
class ProtectionInfo(betterproto.Message):
    protection_info: bytes = betterproto.bytes_field(1)
    protection_info_tag: str = betterproto.string_field(2)


@dataclass
class Zone(betterproto.Message):
    zone_identifier: "RecordZoneIdentifier" = betterproto.message_field(1)
    etag: str = betterproto.string_field(2)
    protection_info: "ProtectionInfo" = betterproto.message_field(3)
    record_protection_info: "ProtectionInfo" = betterproto.message_field(6)


@dataclass
class FileTokens(betterproto.Message):
    file_tokens: List["FileToken"] = betterproto.message_field(1)


@dataclass
class FileToken(betterproto.Message):
    signature: bytes = betterproto.bytes_field(1)
    download_token: str = betterproto.string_field(2)
    size: int = betterproto.uint64_field(3)
    reference_signature: bytes = betterproto.bytes_field(4)


@dataclass
class EncryptedAttributes(betterproto.Message):
    relative_path: str = betterproto.string_field(1)
    domain: str = betterproto.string_field(2)
    birth: int = betterproto.uint64_field(3)
    modified: int = betterproto.uint64_field(4)
    status_changed: int = betterproto.uint64_field(5)
    size: int = betterproto.uint64_field(6)
    group_i_d: int = betterproto.uint32_field(7)
    user_i_d: int = betterproto.uint32_field(8)
    mode: int = betterproto.uint32_field(9)
    size_before_copy: int = betterproto.uint64_field(10)
    link_target: bytes = betterproto.bytes_field(11)
    encryption_key: bytes = betterproto.bytes_field(12)
    sha256_signature: bytes = betterproto.bytes_field(13)
    domain_ordinal: int = betterproto.int32_field(14)
    flags: int = betterproto.int32_field(15)
    content_encoding_method: int = betterproto.int32_field(16)
    content_compression_method: int = betterproto.int32_field(17)
